from django.db import models
import qrcode
from io import BytesIO
from django.core.files import File
from PIL import Image, ImageDraw

class Location(models.Model):

    # location_name field (stores the location name)
    location_name = models.CharField(max_length=100, unique=True)

    # qrcode_filepath field (stores the "qrcodes/.." file path of the generated QR code)
    qrcode_filepath = models.ImageField(blank=True, upload_to='qrcodes')

    # Print the instance of the location_name field of the model
    def __str__(self):
        return self.location_name
    
    # save() function to generate QR Code based on location name
    def save(self, *args, **kwargs):

        # Append the substring "NUSSOCSH23", which serves as an identifier for validation of QR Codes generated by our Web App
        qrcode_data = f'{self.location_name}NUSSOCSH23'

        # Generate QR Code
        qrcode_image = qrcode.make(qrcode_data)
        canvas = Image.new('RGB', (qrcode_image.pixel_size, qrcode_image.pixel_size), 'white')
        draw = ImageDraw.Draw(canvas)
        canvas.paste(qrcode_image)
        
        # Store QR Code based on location name
        fname = f'{self.location_name}-qr_code.png'
        stream = BytesIO()
        canvas.save(stream, 'PNG')
        self.qrcode_filepath.save(fname, File(stream), save=False)
        canvas.close()
        super().save(*args, **kwargs)
